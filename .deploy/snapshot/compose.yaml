name: core-system-$VERSION

services:
  backend:
    image: "nycusdc/core-system-backend:$VERSION"
    networks:
      - core_system_$VERSION
      - traefik
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DEV: "true"
      ENV: "snapshot"
      HOST: "0.0.0.0"
      BASE_URL: "https://$VERSION.core-system.sdc.nycu.club"
      OAUTH_PROXY_BASE_URL: "https://oauth-proxy.sdc.nycu.club"
      OAUTH_PROXY_SECRET: ${OAUTH_PROXY_TOKEN}
      DATABASE_URL: postgres://postgres:password@postgres:5432/core_system?sslmode=disable
      MIGRATION_SOURCE: file:///app/migrations
      OTEL_COLLECTOR_URL: 10.1.252.100:4317
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}
      VERSION: $VERSION
      ALLOW_ORIGINS: "*"
    labels:
      - "vector.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.core-system-backend-$VERSION.rule=Host(`$VERSION.core-system.sdc.nycu.club`) && PathPrefix(`/api`)"
      - "traefik.http.routers.core-system-backend-$VERSION.entrypoints=websecure"
      - "traefik.http.routers.core-system-backend-$VERSION.tls=true"
      - "traefik.http.routers.core-system-backend-$VERSION.tls.certresolver=cloudflare"

  postgres:
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: core_system
    networks:
      - core_system_$VERSION

networks:
  core_system_$VERSION:
    driver: bridge
  traefik:
    external: true
