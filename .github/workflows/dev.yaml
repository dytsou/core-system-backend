name: Dev Backend

on:
  push:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0

  Test:
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Setup Sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.28.0'

      - name: Setup mockery
        uses: brokeyourbike/go-mockery-action@v0
        with:
          mockery-version: '2.53.3'

      - name: Test
        run: make test

  Build:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Setup Sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.25.0'

      - name: Setup mockery
        uses: brokeyourbike/go-mockery-action@v0
        with:
          mockery-version: '2.53.3'

      - name: Build
        run: |
          go mod download
          make gen
          go build -ldflags="-X 'main.BuildTime=$(date --utc '+%FT%TZ')' -X 'main.CommitHash=${{ github.sha }}'" -o bin/backend cmd/backend/main.go

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: |
            nycusdc/core-system-backend:dev
            nycusdc/core-system-backend:${{ github.sha }}
          context: .

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger n8n Deploy Webhook
        run: |
          curl --location --fail-with-body --request POST 'https://webhook.sdc.nycu.club/webhook/deploy' \
            --header 'Content-Type: application/json' \
            --header "x-deploy-token: ${{ secrets.N8N_DEPLOY_TOKEN }}" \
            --data-raw '{
            "source": {
              "title": "Core System",
              "repo": "${{ github.repository }}",
              "branch": "${{ github.head_ref || github.ref_name }}",
              "commit": "${{ github.sha }}"
            },
            "method": "deploy",
            "metadata": {
              "environment": "dev",
              "component": "backend"
            },
            "setup": {
              "inject_secret": {
                "enable": true,
                "project": "core-system",
                "environment": "dev",
                "secrets": [
                  {
                    "path": "/google-oauth",
                    "secret_name": "CLIENT_ID",
                    "env_name": "GOOGLE_OAUTH_CLIENT_ID"
                  },
                  {
                    "path": "/google-oauth",
                    "secret_name": "CLIENT_SECRET",
                    "env_name": "GOOGLE_OAUTH_CLIENT_SECRET"
                  }
                ]
              }
            },
            "post": {
              "notify_discord": {
                "enable": true,
                "channel": "core-system-activity"
              },
              "setup_domain": {
                "enable": true,
                "title": "Endpoint",
                "name": "dev.core-system.sdc.nycu.club",
                "value": "default-eng-deploy:internal"
              }
            }
          }'
